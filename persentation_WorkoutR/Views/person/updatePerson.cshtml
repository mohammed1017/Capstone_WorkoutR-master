@model persentation_WorkoutR.Models.personModel
@using persentation_WorkoutR.Models

@{
    ViewBag.Title = "updatePerson";
}
<br />
<i class="fa fa fa-arrow-circle-left" style="font-size:16px; padding:5px"></i>@Html.ActionLink("Back to Profile", "profile")
<h2>Update Profile</h2><br />
<div class="w3ls-register box box--big">
    @using (Html.BeginForm("updatePerson", "person", FormMethod.Post))
    {
        <div class="container">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="display:none;">
                @Html.HiddenFor(model => model.personID, htmlAttributes: new { @class = "form-control" })

                @Html.HiddenFor(model => model.personID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.personID, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personFirstName)

                @Html.EditorFor(model => model.personFirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name", @required = true} })
                @Html.ValidationMessageFor(model => model.personFirstName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personLastName)

                @Html.EditorFor(model => model.personLastName, new { htmlAttributes = new { @class = "form-control" ,@placeholder = "Last Name", @required = true } })
                @Html.ValidationMessageFor(model => model.personLastName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personAddress)

                @Html.EditorFor(model => model.personAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address", @required = true } })
                @Html.ValidationMessageFor(model => model.personAddress, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personCity)

                @Html.EditorFor(model => model.personCity, new { htmlAttributes = new { @class = "form-control", @placeholder = "City", @required = true } })
                @Html.ValidationMessageFor(model => model.personCity, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personState)

                @Html.EditorFor(model => model.personState, new { htmlAttributes = new { @class = "form-control", @placeholder = "State", @required = true } })
                @Html.ValidationMessageFor(model => model.personState, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personZip)

                @Html.EditorFor(model => model.personZip, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zip Code", @required = true } })
                @Html.ValidationMessageFor(model => model.personZip, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personPhone)

                @Html.EditorFor(model => model.personPhone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone #", @required = true } })
                @Html.ValidationMessageFor(model => model.personPhone, "", new { @class = "text-danger" })

            </div>
            <div class="form-group" style="display:none">
                @Html.HiddenFor(model => model.FK_roleID)

                @Html.HiddenFor(model => model.FK_roleID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FK_roleID, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.personUsername)

                @Html.HiddenFor(model => model.personUsername, new { htmlAttributes = new { @class = "form-control", @placeholder = "UsernameName" } })
              

            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.personPassword)

                @Html.HiddenFor(model => model.personPassword, new { htmlAttributes = new { @class = "form-control" , @placeholder = "Password"} })


            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

